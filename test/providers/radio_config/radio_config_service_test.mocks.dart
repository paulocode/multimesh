// Mocks generated by Mockito 5.4.6 from annotations
// in multimesh/test/providers/radio_config/radio_config_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:multimesh/protobufs/generated/meshtastic/config.pb.dart' as _i4;
import 'package:multimesh/protobufs/generated/meshtastic/mesh.pb.dart' as _i5;
import 'package:multimesh/protobufs/generated/meshtastic/module_config.pb.dart'
    as _i6;
import 'package:multimesh/services/radio_config/radio_config_uploader_service.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [RadioConfigUploaderService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRadioConfigUploaderService extends _i1.Mock
    implements _i2.RadioConfigUploaderService {
  MockRadioConfigUploaderService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> uploadLoraConfig(
          {required _i4.Config_LoRaConfig? loraConfig}) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadLoraConfig,
          [],
          {#loraConfig: loraConfig},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> uploadUser({required _i5.User? user}) => (super.noSuchMethod(
        Invocation.method(
          #uploadUser,
          [],
          {#user: user},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> uploadBluetoothConfig(
          {required _i4.Config_BluetoothConfig? bluetoothConfig}) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadBluetoothConfig,
          [],
          {#bluetoothConfig: bluetoothConfig},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> sendShutdown() => (super.noSuchMethod(
        Invocation.method(
          #sendShutdown,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> sendReboot() => (super.noSuchMethod(
        Invocation.method(
          #sendReboot,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> uploadTelemetryConfig(
          {required _i6.ModuleConfig_TelemetryConfig? telemetryConfig}) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadTelemetryConfig,
          [],
          {#telemetryConfig: telemetryConfig},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
