// Mocks generated by Mockito 5.4.6 from annotations
// in multimesh/test/providers/channel_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i8;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;
import 'package:multimesh/models/radio_configuration.dart' as _i2;
import 'package:multimesh/protobufs/generated/meshtastic/config.pb.dart'
    as _i12;
import 'package:multimesh/protobufs/generated/meshtastic/mesh.pb.dart' as _i5;
import 'package:multimesh/protobufs/generated/meshtastic/module_config.pb.dart'
    as _i13;
import 'package:multimesh/protobufs/generated/meshtastic/portnums.pb.dart'
    as _i7;
import 'package:multimesh/providers/radio_config/radio_config_service.dart'
    as _i9;
import 'package:multimesh/services/ack_waiting_radio_writer.dart' as _i6;
import 'package:multimesh/services/interfaces/radio_reader.dart' as _i3;
import 'package:riverpod_annotation/riverpod_annotation.dart' as _i10;
import 'package:state_notifier/state_notifier.dart' as _i14;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRadioConfiguration_0 extends _i1.SmartFake
    implements _i2.RadioConfiguration {
  _FakeRadioConfiguration_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RadioReader].
///
/// See the documentation for Mockito's code generation for more information.
class MockRadioReader extends _i1.Mock implements _i3.RadioReader {
  MockRadioReader() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<_i5.FromRadio> onPacketReceived() => (super.noSuchMethod(
        Invocation.method(
          #onPacketReceived,
          [],
        ),
        returnValue: _i4.Stream<_i5.FromRadio>.empty(),
      ) as _i4.Stream<_i5.FromRadio>);
}

/// A class which mocks [AckWaitingRadioWriter].
///
/// See the documentation for Mockito's code generation for more information.
class MockAckWaitingRadioWriter extends _i1.Mock
    implements _i6.AckWaitingRadioWriter {
  MockAckWaitingRadioWriter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> sendMeshPacket({
    required int? to,
    int? channel = 0,
    bool? wantAck = false,
    required _i7.PortNum? portNum,
    _i5.MeshPacket_Priority? priority = _i5.MeshPacket_Priority.RELIABLE,
    bool? wantResponse,
    _i8.Uint8List? payload,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMeshPacket,
          [],
          {
            #to: to,
            #channel: channel,
            #wantAck: wantAck,
            #portNum: portNum,
            #priority: priority,
            #wantResponse: wantResponse,
            #payload: payload,
            #id: id,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> sendWantConfig({required int? wantConfigId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendWantConfig,
          [],
          {#wantConfigId: wantConfigId},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  int generatePacketId() => (super.noSuchMethod(
        Invocation.method(
          #generatePacketId,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  _i4.Future<void> waitForAck(int? packetId) => (super.noSuchMethod(
        Invocation.method(
          #waitForAck,
          [packetId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [RadioConfigService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRadioConfigService extends _i1.Mock
    implements _i9.RadioConfigService {
  MockRadioConfigService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Ref get ref => (super.noSuchMethod(
        Invocation.getter(#ref),
        returnValue: _i11.dummyValue<_i10.Ref>(
          this,
          Invocation.getter(#ref),
        ),
      ) as _i10.Ref);

  @override
  _i2.RadioConfiguration get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeRadioConfiguration_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.RadioConfiguration);

  @override
  set state(_i2.RadioConfiguration? newState) => super.noSuchMethod(
        Invocation.setter(
          #state,
          newState,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RadioConfiguration build() => (super.noSuchMethod(
        Invocation.method(
          #build,
          [],
        ),
        returnValue: _FakeRadioConfiguration_0(
          this,
          Invocation.method(
            #build,
            [],
          ),
        ),
      ) as _i2.RadioConfiguration);

  @override
  void setLoraConfig(_i12.Config_LoRaConfig? loraConfig) => super.noSuchMethod(
        Invocation.method(
          #setLoraConfig,
          [loraConfig],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setMyNodeInfo(_i5.NodeInfo? myNodeInfo) => super.noSuchMethod(
        Invocation.method(
          #setMyNodeInfo,
          [myNodeInfo],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setMyNodeNum(int? myNodeNum) => super.noSuchMethod(
        Invocation.method(
          #setMyNodeNum,
          [myNodeNum],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setHasOwnNodeInfo() => super.noSuchMethod(
        Invocation.method(
          #setHasOwnNodeInfo,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setConfigDownloaded() => super.noSuchMethod(
        Invocation.method(
          #setConfigDownloaded,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBluetoothConfig(_i12.Config_BluetoothConfig? bluetoothConfig) =>
      super.noSuchMethod(
        Invocation.method(
          #setBluetoothConfig,
          [bluetoothConfig],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setTelemetryConfig(_i13.ModuleConfig_TelemetryConfig? telemetryConfig) =>
      super.noSuchMethod(
        Invocation.method(
          #setTelemetryConfig,
          [telemetryConfig],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clear() => super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void runBuild() => super.noSuchMethod(
        Invocation.method(
          #runBuild,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i14.RemoveListener listenSelf(
    void Function(
      _i2.RadioConfiguration?,
      _i2.RadioConfiguration,
    )? listener, {
    void Function(
      Object,
      StackTrace,
    )? onError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listenSelf,
          [listener],
          {#onError: onError},
        ),
        returnValue: () {},
      ) as _i14.RemoveListener);

  @override
  bool updateShouldNotify(
    _i2.RadioConfiguration? previous,
    _i2.RadioConfiguration? next,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            previous,
            next,
          ],
        ),
        returnValue: false,
      ) as bool);
}
